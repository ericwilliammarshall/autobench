#!/bin/bash
if [ -f /etc/node_id ]; then
	NODEID=`cat /etc/node_id`

	TESTNAME=`cat /etc/node_testname`
        TESTDATE=`cat /etc/node_testdate`
	LOCALIP=`curl -s http://169.254.169.254/2011-05-01/meta-data/local-ipv4`
	HEADNODE="10.136.71.116"
	if [ -f /etc/node_headnode ]; then
		HEADNODE=`cat /etc/node_headnode`
	fi

	if [ -f /etc/node_master ]; then
		MASTERIP=`cat /etc/node_master`
	else
		MASTERIP="$LOCALIP"
	fi
	MASTERNAME=`dig +short -x $MASTERIP | sed -e 's/\.$//'`

	# Replace tokens in Hadoop templates
	sed -e "s/__MASTER__/$MASTERNAME/" /home/ubuntu/hadoop/core-site.template > /home/ubuntu/hadoop/current/etc/hadoop/core-site.xml
	#sed -e "s/__MASTER__/$MASTERNAME/" /home/ubuntu/hadoop/mapred-site.template > /home/ubuntu/hadoop/current/etc/hadoop/mapred-site.xml
	cp /home/ubuntu/hadoop/hdfs-site.xml /home/ubuntu/hadoop/current/etc/hadoop/hdfs-site.xml

	mkdir -p /mnt/hdfs/{name,data,zookeeper}
	chown -R ubuntu: /mnt/hdfs
	# Start Hadoop services
	if [ "$NODEID" == "1" ]; then
		su - ubuntu -c "hadoop/current/bin/hdfs namenode -format ${TESTNAME}_${TESTDATE}"
		#service hadoop-namenode format
		su - ubuntu -c "hadoop/current/sbin/hadoop-daemon.sh --script hdfs start namenode"
		#service hadoop-namenode start
	fi
	su - ubuntu -c "hadoop/current/sbin/hadoop-daemon.sh --script hdfs start datanode"
	#service hadoop-datanode start

	# Wait a few seconds for node initialization
	sleep 5

	# Replace tokens in HBase template
	sed -e "s/__MASTER__/$MASTERNAME/" /home/ubuntu/hbase/hbase-site.template > /home/ubuntu/hbase/current/conf/hbase-site.xml

	if [ "$NODEID" == "1" ]; then
		su - ubuntu -c "hbase/current/bin/hbase-daemon.sh start zookeeper"
		su - ubuntu -c "hbase/current/bin/hbase-daemon.sh start master"
	fi
	su - ubuntu -c "hbase/current/bin/hbase-daemon.sh start regionserver"

	ln -s /root/bin/hbase/db_ready /root/bin/db_ready
	psql -AX -qt -U root -h $HEADNODE root -c "UPDATE ${TESTNAME}_${TESTDATE}_data SET ready = true WHERE instance_ip = '${LOCALIP}'"
fi
